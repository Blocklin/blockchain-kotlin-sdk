# This is a basic test workflow to help you get started with Actions.
# Tutorial: https://tomgregory.com/build-gradle-projects-with-github-actions/

name: CI

# Controls when the workflow will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2
      
      # Action to ensure the jar file is legitimate.
      - uses: gradle/wrapper-validation-action@v1
      
      # Runs a single command using the runners shell.
      #- name: Run a one-line script
      #  run: echo Hello, world!
          
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          
      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: Test report
          path: build/reports/tests/test
          
      # Runs a set of commands using the runners shell
      #- name: Build app
      #  run: |
      #    echo Gradle buil started...
      #    ./gradlew build --no-daemon
